Animate:

@keyframes	Указывает код анимации.

/* The animation code */
@keyframes example {
    from {background-color: red;}

    /**************/
    5%{

    }
    /**************/

    to {background-color: yellow;}
}




animation-delay	Определяет задержку начала анимации.

animation-delay: 2s;  
/**************/


animation-direction	Определяет, должен ли анимация играть в обратном направлении или альтернативных циклов.

animation-direction: reverse;
/**************/


animation-duration	Определяет, сколько секунд или миллисекунд анимации, необходимое для завершения одного цикла.

animation-duration: 4s;
/**************/


animation-fill-mode	Определяет стиль для элемента, когда анимация не играл (когда она будет закончена, или если она имеет задержку).
/**************/



animation-iteration-count	Определяет, сколько раз анимация должна играть.

animation-iteration-count: 3;  3 раза
animation-iteration-count: infinite;  бесконечно 
/**************/



animation-name	имя анимации @keyframes.

animation-name: example;
/**************/



animation-play-state	Определяет ли анимация работает или приостановлена.

animation-play-state: paused;
animation-play-state: running;
/**************/



animation-timing-function	Определяет скорость кривой анимации.

animation-timing-function: linear;


ease - specifies an animation with a slow start, then fast, then end slowly (this is default)
linear - specifies an animation with the same speed from start to end
ease-in - specifies an animation with a slow start
ease-out - specifies an animation with a slow end
ease-in-out - specifies an animation with a slow start and end
cubic-bezier(n,n,n,n) - lets you define your own values in a cubic-bezier function

/**************/



*{
	animation-name: example;
    animation-duration: 4s;
    animation-delay: 2s;  
    animation-iteration-count: 3;   сколько раз анимация должна работать.   infinite
    animation-direction: reverse;
    animation-timing-function: linear;
}

div {
    animation: example 5s linear 2s infinite alternate;
}

